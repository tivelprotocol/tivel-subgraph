// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreatePool extends ethereum.Event {
  get params(): CreatePool__Params {
    return new CreatePool__Params(this);
  }
}

export class CreatePool__Params {
  _event: CreatePool;

  constructor(event: CreatePool) {
    this._event = event;
  }

  get quoteToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get interest(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SetBaseTokenLT extends ethereum.Event {
  get params(): SetBaseTokenLT__Params {
    return new SetBaseTokenLT__Params(this);
  }
}

export class SetBaseTokenLT__Params {
  _event: SetBaseTokenLT;

  constructor(event: SetBaseTokenLT) {
    this._event = event;
  }

  get baseToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetBaseTokenMUT extends ethereum.Event {
  get params(): SetBaseTokenMUT__Params {
    return new SetBaseTokenMUT__Params(this);
  }
}

export class SetBaseTokenMUT__Params {
  _event: SetBaseTokenMUT;

  constructor(event: SetBaseTokenMUT) {
    this._event = event;
  }

  get baseToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mut(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetCollateralLT extends ethereum.Event {
  get params(): SetCollateralLT__Params {
    return new SetCollateralLT__Params(this);
  }
}

export class SetCollateralLT__Params {
  _event: SetCollateralLT;

  constructor(event: SetCollateralLT) {
    this._event = event;
  }

  get collateral(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetCollateralMUT extends ethereum.Event {
  get params(): SetCollateralMUT__Params {
    return new SetCollateralMUT__Params(this);
  }
}

export class SetCollateralMUT__Params {
  _event: SetCollateralMUT;

  constructor(event: SetCollateralMUT) {
    this._event = event;
  }

  get baseToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mut(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetDEXAggregator extends ethereum.Event {
  get params(): SetDEXAggregator__Params {
    return new SetDEXAggregator__Params(this);
  }
}

export class SetDEXAggregator__Params {
  _event: SetDEXAggregator;

  constructor(event: SetDEXAggregator) {
    this._event = event;
  }

  get newDexAggregator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetLiquidationFeeRate extends ethereum.Event {
  get params(): SetLiquidationFeeRate__Params {
    return new SetLiquidationFeeRate__Params(this);
  }
}

export class SetLiquidationFeeRate__Params {
  _event: SetLiquidationFeeRate;

  constructor(event: SetLiquidationFeeRate) {
    this._event = event;
  }

  get newLiquidationFeeRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetLiquidationFeeTo extends ethereum.Event {
  get params(): SetLiquidationFeeTo__Params {
    return new SetLiquidationFeeTo__Params(this);
  }
}

export class SetLiquidationFeeTo__Params {
  _event: SetLiquidationFeeTo;

  constructor(event: SetLiquidationFeeTo) {
    this._event = event;
  }

  get newLiquidationFeeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetManager extends ethereum.Event {
  get params(): SetManager__Params {
    return new SetManager__Params(this);
  }
}

export class SetManager__Params {
  _event: SetManager;

  constructor(event: SetManager) {
    this._event = event;
  }

  get newManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetManualExpiration extends ethereum.Event {
  get params(): SetManualExpiration__Params {
    return new SetManualExpiration__Params(this);
  }
}

export class SetManualExpiration__Params {
  _event: SetManualExpiration;

  constructor(event: SetManualExpiration) {
    this._event = event;
  }

  get newManualExpiration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetMinQuoteRate extends ethereum.Event {
  get params(): SetMinQuoteRate__Params {
    return new SetMinQuoteRate__Params(this);
  }
}

export class SetMinQuoteRate__Params {
  _event: SetMinQuoteRate;

  constructor(event: SetMinQuoteRate) {
    this._event = event;
  }

  get newMinQuoteRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetOperator extends ethereum.Event {
  get params(): SetOperator__Params {
    return new SetOperator__Params(this);
  }
}

export class SetOperator__Params {
  _event: SetOperator;

  constructor(event: SetOperator) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isOperator(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetPriceFeed extends ethereum.Event {
  get params(): SetPriceFeed__Params {
    return new SetPriceFeed__Params(this);
  }
}

export class SetPriceFeed__Params {
  _event: SetPriceFeed;

  constructor(event: SetPriceFeed) {
    this._event = event;
  }

  get newPriceFeed(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetProtocolFeeRate extends ethereum.Event {
  get params(): SetProtocolFeeRate__Params {
    return new SetProtocolFeeRate__Params(this);
  }
}

export class SetProtocolFeeRate__Params {
  _event: SetProtocolFeeRate;

  constructor(event: SetProtocolFeeRate) {
    this._event = event;
  }

  get newProtocolFeeRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetProtocolFeeTo extends ethereum.Event {
  get params(): SetProtocolFeeTo__Params {
    return new SetProtocolFeeTo__Params(this);
  }
}

export class SetProtocolFeeTo__Params {
  _event: SetProtocolFeeTo;

  constructor(event: SetProtocolFeeTo) {
    this._event = event;
  }

  get newProtocolFeeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetRollbackFee extends ethereum.Event {
  get params(): SetRollbackFee__Params {
    return new SetRollbackFee__Params(this);
  }
}

export class SetRollbackFee__Params {
  _event: SetRollbackFee;

  constructor(event: SetRollbackFee) {
    this._event = event;
  }

  get newRollbackFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetServiceFeeTo extends ethereum.Event {
  get params(): SetServiceFeeTo__Params {
    return new SetServiceFeeTo__Params(this);
  }
}

export class SetServiceFeeTo__Params {
  _event: SetServiceFeeTo;

  constructor(event: SetServiceFeeTo) {
    this._event = event;
  }

  get newServiceFeeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetServiceToken extends ethereum.Event {
  get params(): SetServiceToken__Params {
    return new SetServiceToken__Params(this);
  }
}

export class SetServiceToken__Params {
  _event: SetServiceToken;

  constructor(event: SetServiceToken) {
    this._event = event;
  }

  get newServiceToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetUpdateCollateralAmountFee extends ethereum.Event {
  get params(): SetUpdateCollateralAmountFee__Params {
    return new SetUpdateCollateralAmountFee__Params(this);
  }
}

export class SetUpdateCollateralAmountFee__Params {
  _event: SetUpdateCollateralAmountFee;

  constructor(event: SetUpdateCollateralAmountFee) {
    this._event = event;
  }

  get newUpdateCollateralAmountFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetUpdateDeadlineFee extends ethereum.Event {
  get params(): SetUpdateDeadlineFee__Params {
    return new SetUpdateDeadlineFee__Params(this);
  }
}

export class SetUpdateDeadlineFee__Params {
  _event: SetUpdateDeadlineFee;

  constructor(event: SetUpdateDeadlineFee) {
    this._event = event;
  }

  get newUpdateDeadlineFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetUpdateStoplossPriceFee extends ethereum.Event {
  get params(): SetUpdateStoplossPriceFee__Params {
    return new SetUpdateStoplossPriceFee__Params(this);
  }
}

export class SetUpdateStoplossPriceFee__Params {
  _event: SetUpdateStoplossPriceFee;

  constructor(event: SetUpdateStoplossPriceFee) {
    this._event = event;
  }

  get newUpdateStoplossPriceFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetUserStorage extends ethereum.Event {
  get params(): SetUserStorage__Params {
    return new SetUserStorage__Params(this);
  }
}

export class SetUserStorage__Params {
  _event: SetUserStorage;

  constructor(event: SetUserStorage) {
    this._event = event;
  }

  get newUserStorage(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  baseTokenLT(param0: Address): BigInt {
    let result = super.call("baseTokenLT", "baseTokenLT(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_baseTokenLT(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "baseTokenLT",
      "baseTokenLT(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseTokenMUT(param0: Address): BigInt {
    let result = super.call("baseTokenMUT", "baseTokenMUT(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_baseTokenMUT(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "baseTokenMUT",
      "baseTokenMUT(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateralLT(param0: Address): BigInt {
    let result = super.call("collateralLT", "collateralLT(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_collateralLT(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "collateralLT",
      "collateralLT(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateralMUT(param0: Address): BigInt {
    let result = super.call(
      "collateralMUT",
      "collateralMUT(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_collateralMUT(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "collateralMUT",
      "collateralMUT(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createPool(_quoteToken: Address, _interest: BigInt): Address {
    let result = super.call(
      "createPool",
      "createPool(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(_quoteToken),
        ethereum.Value.fromUnsignedBigInt(_interest)
      ]
    );

    return result[0].toAddress();
  }

  try_createPool(
    _quoteToken: Address,
    _interest: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createPool",
      "createPool(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(_quoteToken),
        ethereum.Value.fromUnsignedBigInt(_interest)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dexAggregator(): Address {
    let result = super.call("dexAggregator", "dexAggregator():(address)", []);

    return result[0].toAddress();
  }

  try_dexAggregator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dexAggregator",
      "dexAggregator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  interest(_quoteToken: Address): BigInt {
    let result = super.call("interest", "interest(address):(uint256)", [
      ethereum.Value.fromAddress(_quoteToken)
    ]);

    return result[0].toBigInt();
  }

  try_interest(_quoteToken: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("interest", "interest(address):(uint256)", [
      ethereum.Value.fromAddress(_quoteToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidationFeeRate(): BigInt {
    let result = super.call(
      "liquidationFeeRate",
      "liquidationFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_liquidationFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidationFeeRate",
      "liquidationFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidationFeeTo(): Address {
    let result = super.call(
      "liquidationFeeTo",
      "liquidationFeeTo():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_liquidationFeeTo(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "liquidationFeeTo",
      "liquidationFeeTo():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  manualExpiration(): BigInt {
    let result = super.call(
      "manualExpiration",
      "manualExpiration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_manualExpiration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "manualExpiration",
      "manualExpiration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minQuoteRate(): BigInt {
    let result = super.call("minQuoteRate", "minQuoteRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minQuoteRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minQuoteRate", "minQuoteRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operator(param0: Address): boolean {
    let result = super.call("operator", "operator(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_operator(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("operator", "operator(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolByQuoteToken(param0: Address): Address {
    let result = super.call(
      "poolByQuoteToken",
      "poolByQuoteToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_poolByQuoteToken(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "poolByQuoteToken",
      "poolByQuoteToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolDeployer(): Address {
    let result = super.call("poolDeployer", "poolDeployer():(address)", []);

    return result[0].toAddress();
  }

  try_poolDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolDeployer", "poolDeployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolIndex(param0: Address): BigInt {
    let result = super.call("poolIndex", "poolIndex(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_poolIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolIndex", "poolIndex(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolLength(): BigInt {
    let result = super.call("poolLength", "poolLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_poolLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolLength", "poolLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pools(param0: BigInt): Address {
    let result = super.call("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  positionStorage(): Address {
    let result = super.call(
      "positionStorage",
      "positionStorage():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_positionStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "positionStorage",
      "positionStorage():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priceFeed(): Address {
    let result = super.call("priceFeed", "priceFeed():(address)", []);

    return result[0].toAddress();
  }

  try_priceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall("priceFeed", "priceFeed():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeRate(): BigInt {
    let result = super.call(
      "protocolFeeRate",
      "protocolFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_protocolFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeeRate",
      "protocolFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolFeeTo(): Address {
    let result = super.call("protocolFeeTo", "protocolFeeTo():(address)", []);

    return result[0].toAddress();
  }

  try_protocolFeeTo(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeTo",
      "protocolFeeTo():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rollbackFee(): BigInt {
    let result = super.call("rollbackFee", "rollbackFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_rollbackFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("rollbackFee", "rollbackFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  serviceFeeTo(): Address {
    let result = super.call("serviceFeeTo", "serviceFeeTo():(address)", []);

    return result[0].toAddress();
  }

  try_serviceFeeTo(): ethereum.CallResult<Address> {
    let result = super.tryCall("serviceFeeTo", "serviceFeeTo():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  serviceToken(): Address {
    let result = super.call("serviceToken", "serviceToken():(address)", []);

    return result[0].toAddress();
  }

  try_serviceToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("serviceToken", "serviceToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  updateCollateralAmountFee(): BigInt {
    let result = super.call(
      "updateCollateralAmountFee",
      "updateCollateralAmountFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_updateCollateralAmountFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "updateCollateralAmountFee",
      "updateCollateralAmountFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  updateDeadlineFee(): BigInt {
    let result = super.call(
      "updateDeadlineFee",
      "updateDeadlineFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_updateDeadlineFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "updateDeadlineFee",
      "updateDeadlineFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  updateStoplossPriceFee(): BigInt {
    let result = super.call(
      "updateStoplossPriceFee",
      "updateStoplossPriceFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_updateStoplossPriceFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "updateStoplossPriceFee",
      "updateStoplossPriceFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userStorage(): Address {
    let result = super.call("userStorage", "userStorage():(address)", []);

    return result[0].toAddress();
  }

  try_userStorage(): ethereum.CallResult<Address> {
    let result = super.tryCall("userStorage", "userStorage():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withdrawalMonitor(): Address {
    let result = super.call(
      "withdrawalMonitor",
      "withdrawalMonitor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_withdrawalMonitor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "withdrawalMonitor",
      "withdrawalMonitor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _poolDeployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionStorage(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _withdrawalMonitor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _userStorage(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _priceFeed(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _dexAggregator(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get _quoteToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _interest(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetBaseTokenLTCall extends ethereum.Call {
  get inputs(): SetBaseTokenLTCall__Inputs {
    return new SetBaseTokenLTCall__Inputs(this);
  }

  get outputs(): SetBaseTokenLTCall__Outputs {
    return new SetBaseTokenLTCall__Outputs(this);
  }
}

export class SetBaseTokenLTCall__Inputs {
  _call: SetBaseTokenLTCall;

  constructor(call: SetBaseTokenLTCall) {
    this._call = call;
  }

  get _baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetBaseTokenLTCall__Outputs {
  _call: SetBaseTokenLTCall;

  constructor(call: SetBaseTokenLTCall) {
    this._call = call;
  }
}

export class SetBaseTokenMUTCall extends ethereum.Call {
  get inputs(): SetBaseTokenMUTCall__Inputs {
    return new SetBaseTokenMUTCall__Inputs(this);
  }

  get outputs(): SetBaseTokenMUTCall__Outputs {
    return new SetBaseTokenMUTCall__Outputs(this);
  }
}

export class SetBaseTokenMUTCall__Inputs {
  _call: SetBaseTokenMUTCall;

  constructor(call: SetBaseTokenMUTCall) {
    this._call = call;
  }

  get _baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _mut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetBaseTokenMUTCall__Outputs {
  _call: SetBaseTokenMUTCall;

  constructor(call: SetBaseTokenMUTCall) {
    this._call = call;
  }
}

export class SetCollateralLTCall extends ethereum.Call {
  get inputs(): SetCollateralLTCall__Inputs {
    return new SetCollateralLTCall__Inputs(this);
  }

  get outputs(): SetCollateralLTCall__Outputs {
    return new SetCollateralLTCall__Outputs(this);
  }
}

export class SetCollateralLTCall__Inputs {
  _call: SetCollateralLTCall;

  constructor(call: SetCollateralLTCall) {
    this._call = call;
  }

  get _collateral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCollateralLTCall__Outputs {
  _call: SetCollateralLTCall;

  constructor(call: SetCollateralLTCall) {
    this._call = call;
  }
}

export class SetCollateralMUTCall extends ethereum.Call {
  get inputs(): SetCollateralMUTCall__Inputs {
    return new SetCollateralMUTCall__Inputs(this);
  }

  get outputs(): SetCollateralMUTCall__Outputs {
    return new SetCollateralMUTCall__Outputs(this);
  }
}

export class SetCollateralMUTCall__Inputs {
  _call: SetCollateralMUTCall;

  constructor(call: SetCollateralMUTCall) {
    this._call = call;
  }

  get _collateral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _mut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCollateralMUTCall__Outputs {
  _call: SetCollateralMUTCall;

  constructor(call: SetCollateralMUTCall) {
    this._call = call;
  }
}

export class SetDEXAggregatorCall extends ethereum.Call {
  get inputs(): SetDEXAggregatorCall__Inputs {
    return new SetDEXAggregatorCall__Inputs(this);
  }

  get outputs(): SetDEXAggregatorCall__Outputs {
    return new SetDEXAggregatorCall__Outputs(this);
  }
}

export class SetDEXAggregatorCall__Inputs {
  _call: SetDEXAggregatorCall;

  constructor(call: SetDEXAggregatorCall) {
    this._call = call;
  }

  get _dexAggregator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDEXAggregatorCall__Outputs {
  _call: SetDEXAggregatorCall;

  constructor(call: SetDEXAggregatorCall) {
    this._call = call;
  }
}

export class SetLiquidationFeeRateCall extends ethereum.Call {
  get inputs(): SetLiquidationFeeRateCall__Inputs {
    return new SetLiquidationFeeRateCall__Inputs(this);
  }

  get outputs(): SetLiquidationFeeRateCall__Outputs {
    return new SetLiquidationFeeRateCall__Outputs(this);
  }
}

export class SetLiquidationFeeRateCall__Inputs {
  _call: SetLiquidationFeeRateCall;

  constructor(call: SetLiquidationFeeRateCall) {
    this._call = call;
  }

  get _liquidationFeeRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLiquidationFeeRateCall__Outputs {
  _call: SetLiquidationFeeRateCall;

  constructor(call: SetLiquidationFeeRateCall) {
    this._call = call;
  }
}

export class SetLiquidationFeeToCall extends ethereum.Call {
  get inputs(): SetLiquidationFeeToCall__Inputs {
    return new SetLiquidationFeeToCall__Inputs(this);
  }

  get outputs(): SetLiquidationFeeToCall__Outputs {
    return new SetLiquidationFeeToCall__Outputs(this);
  }
}

export class SetLiquidationFeeToCall__Inputs {
  _call: SetLiquidationFeeToCall;

  constructor(call: SetLiquidationFeeToCall) {
    this._call = call;
  }

  get _liquidationFeeTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLiquidationFeeToCall__Outputs {
  _call: SetLiquidationFeeToCall;

  constructor(call: SetLiquidationFeeToCall) {
    this._call = call;
  }
}

export class SetManagerCall extends ethereum.Call {
  get inputs(): SetManagerCall__Inputs {
    return new SetManagerCall__Inputs(this);
  }

  get outputs(): SetManagerCall__Outputs {
    return new SetManagerCall__Outputs(this);
  }
}

export class SetManagerCall__Inputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetManagerCall__Outputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }
}

export class SetManualExpirationCall extends ethereum.Call {
  get inputs(): SetManualExpirationCall__Inputs {
    return new SetManualExpirationCall__Inputs(this);
  }

  get outputs(): SetManualExpirationCall__Outputs {
    return new SetManualExpirationCall__Outputs(this);
  }
}

export class SetManualExpirationCall__Inputs {
  _call: SetManualExpirationCall;

  constructor(call: SetManualExpirationCall) {
    this._call = call;
  }

  get _manualExpiration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetManualExpirationCall__Outputs {
  _call: SetManualExpirationCall;

  constructor(call: SetManualExpirationCall) {
    this._call = call;
  }
}

export class SetMinQuoteRateCall extends ethereum.Call {
  get inputs(): SetMinQuoteRateCall__Inputs {
    return new SetMinQuoteRateCall__Inputs(this);
  }

  get outputs(): SetMinQuoteRateCall__Outputs {
    return new SetMinQuoteRateCall__Outputs(this);
  }
}

export class SetMinQuoteRateCall__Inputs {
  _call: SetMinQuoteRateCall;

  constructor(call: SetMinQuoteRateCall) {
    this._call = call;
  }

  get _minQuoteRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinQuoteRateCall__Outputs {
  _call: SetMinQuoteRateCall;

  constructor(call: SetMinQuoteRateCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isOperator(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetPoolBaseTokensCall extends ethereum.Call {
  get inputs(): SetPoolBaseTokensCall__Inputs {
    return new SetPoolBaseTokensCall__Inputs(this);
  }

  get outputs(): SetPoolBaseTokensCall__Outputs {
    return new SetPoolBaseTokensCall__Outputs(this);
  }
}

export class SetPoolBaseTokensCall__Inputs {
  _call: SetPoolBaseTokensCall;

  constructor(call: SetPoolBaseTokensCall) {
    this._call = call;
  }

  get _quoteToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _baseTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _tradeables(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class SetPoolBaseTokensCall__Outputs {
  _call: SetPoolBaseTokensCall;

  constructor(call: SetPoolBaseTokensCall) {
    this._call = call;
  }
}

export class SetPoolInterestCall extends ethereum.Call {
  get inputs(): SetPoolInterestCall__Inputs {
    return new SetPoolInterestCall__Inputs(this);
  }

  get outputs(): SetPoolInterestCall__Outputs {
    return new SetPoolInterestCall__Outputs(this);
  }
}

export class SetPoolInterestCall__Inputs {
  _call: SetPoolInterestCall;

  constructor(call: SetPoolInterestCall) {
    this._call = call;
  }

  get _quoteToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _interest(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPoolInterestCall__Outputs {
  _call: SetPoolInterestCall;

  constructor(call: SetPoolInterestCall) {
    this._call = call;
  }
}

export class SetPriceFeedCall extends ethereum.Call {
  get inputs(): SetPriceFeedCall__Inputs {
    return new SetPriceFeedCall__Inputs(this);
  }

  get outputs(): SetPriceFeedCall__Outputs {
    return new SetPriceFeedCall__Outputs(this);
  }
}

export class SetPriceFeedCall__Inputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }

  get _priceFeed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceFeedCall__Outputs {
  _call: SetPriceFeedCall;

  constructor(call: SetPriceFeedCall) {
    this._call = call;
  }
}

export class SetProtocolFeeRateCall extends ethereum.Call {
  get inputs(): SetProtocolFeeRateCall__Inputs {
    return new SetProtocolFeeRateCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeRateCall__Outputs {
    return new SetProtocolFeeRateCall__Outputs(this);
  }
}

export class SetProtocolFeeRateCall__Inputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }

  get _protocolFeeRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeRateCall__Outputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }
}

export class SetProtocolFeeToCall extends ethereum.Call {
  get inputs(): SetProtocolFeeToCall__Inputs {
    return new SetProtocolFeeToCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeToCall__Outputs {
    return new SetProtocolFeeToCall__Outputs(this);
  }
}

export class SetProtocolFeeToCall__Inputs {
  _call: SetProtocolFeeToCall;

  constructor(call: SetProtocolFeeToCall) {
    this._call = call;
  }

  get _protocolFeeTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProtocolFeeToCall__Outputs {
  _call: SetProtocolFeeToCall;

  constructor(call: SetProtocolFeeToCall) {
    this._call = call;
  }
}

export class SetRollbackFeeCall extends ethereum.Call {
  get inputs(): SetRollbackFeeCall__Inputs {
    return new SetRollbackFeeCall__Inputs(this);
  }

  get outputs(): SetRollbackFeeCall__Outputs {
    return new SetRollbackFeeCall__Outputs(this);
  }
}

export class SetRollbackFeeCall__Inputs {
  _call: SetRollbackFeeCall;

  constructor(call: SetRollbackFeeCall) {
    this._call = call;
  }

  get _rollbackFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRollbackFeeCall__Outputs {
  _call: SetRollbackFeeCall;

  constructor(call: SetRollbackFeeCall) {
    this._call = call;
  }
}

export class SetServiceFeeToCall extends ethereum.Call {
  get inputs(): SetServiceFeeToCall__Inputs {
    return new SetServiceFeeToCall__Inputs(this);
  }

  get outputs(): SetServiceFeeToCall__Outputs {
    return new SetServiceFeeToCall__Outputs(this);
  }
}

export class SetServiceFeeToCall__Inputs {
  _call: SetServiceFeeToCall;

  constructor(call: SetServiceFeeToCall) {
    this._call = call;
  }

  get _serviceFeeTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetServiceFeeToCall__Outputs {
  _call: SetServiceFeeToCall;

  constructor(call: SetServiceFeeToCall) {
    this._call = call;
  }
}

export class SetServiceTokenCall extends ethereum.Call {
  get inputs(): SetServiceTokenCall__Inputs {
    return new SetServiceTokenCall__Inputs(this);
  }

  get outputs(): SetServiceTokenCall__Outputs {
    return new SetServiceTokenCall__Outputs(this);
  }
}

export class SetServiceTokenCall__Inputs {
  _call: SetServiceTokenCall;

  constructor(call: SetServiceTokenCall) {
    this._call = call;
  }

  get _serviceToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetServiceTokenCall__Outputs {
  _call: SetServiceTokenCall;

  constructor(call: SetServiceTokenCall) {
    this._call = call;
  }
}

export class SetUpdateCollateralAmountFeeCall extends ethereum.Call {
  get inputs(): SetUpdateCollateralAmountFeeCall__Inputs {
    return new SetUpdateCollateralAmountFeeCall__Inputs(this);
  }

  get outputs(): SetUpdateCollateralAmountFeeCall__Outputs {
    return new SetUpdateCollateralAmountFeeCall__Outputs(this);
  }
}

export class SetUpdateCollateralAmountFeeCall__Inputs {
  _call: SetUpdateCollateralAmountFeeCall;

  constructor(call: SetUpdateCollateralAmountFeeCall) {
    this._call = call;
  }

  get _updateCollateralAmountFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUpdateCollateralAmountFeeCall__Outputs {
  _call: SetUpdateCollateralAmountFeeCall;

  constructor(call: SetUpdateCollateralAmountFeeCall) {
    this._call = call;
  }
}

export class SetUpdateDeadlineFeeCall extends ethereum.Call {
  get inputs(): SetUpdateDeadlineFeeCall__Inputs {
    return new SetUpdateDeadlineFeeCall__Inputs(this);
  }

  get outputs(): SetUpdateDeadlineFeeCall__Outputs {
    return new SetUpdateDeadlineFeeCall__Outputs(this);
  }
}

export class SetUpdateDeadlineFeeCall__Inputs {
  _call: SetUpdateDeadlineFeeCall;

  constructor(call: SetUpdateDeadlineFeeCall) {
    this._call = call;
  }

  get _updateDeadlineFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUpdateDeadlineFeeCall__Outputs {
  _call: SetUpdateDeadlineFeeCall;

  constructor(call: SetUpdateDeadlineFeeCall) {
    this._call = call;
  }
}

export class SetUpdateStoplossPriceFeeCall extends ethereum.Call {
  get inputs(): SetUpdateStoplossPriceFeeCall__Inputs {
    return new SetUpdateStoplossPriceFeeCall__Inputs(this);
  }

  get outputs(): SetUpdateStoplossPriceFeeCall__Outputs {
    return new SetUpdateStoplossPriceFeeCall__Outputs(this);
  }
}

export class SetUpdateStoplossPriceFeeCall__Inputs {
  _call: SetUpdateStoplossPriceFeeCall;

  constructor(call: SetUpdateStoplossPriceFeeCall) {
    this._call = call;
  }

  get _updateStoplossPriceFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUpdateStoplossPriceFeeCall__Outputs {
  _call: SetUpdateStoplossPriceFeeCall;

  constructor(call: SetUpdateStoplossPriceFeeCall) {
    this._call = call;
  }
}

export class SetUserStorageCall extends ethereum.Call {
  get inputs(): SetUserStorageCall__Inputs {
    return new SetUserStorageCall__Inputs(this);
  }

  get outputs(): SetUserStorageCall__Outputs {
    return new SetUserStorageCall__Outputs(this);
  }
}

export class SetUserStorageCall__Inputs {
  _call: SetUserStorageCall;

  constructor(call: SetUserStorageCall) {
    this._call = call;
  }

  get _userStorage(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetUserStorageCall__Outputs {
  _call: SetUserStorageCall;

  constructor(call: SetUserStorageCall) {
    this._call = call;
  }
}
